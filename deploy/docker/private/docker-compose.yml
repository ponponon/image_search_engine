version: "3"
services:
  image_search_engine:
    container_name: image_search_engine
    restart: always
    image: ponponon/image_search_engine:2023.10.30.1
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"
    environment:
      - RUN_MODE=t4
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
    ports:
      - "6200:6200"
    command: python api.py
    volumes:
      - ./config.yaml:/code/config.yaml
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 1200M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6200"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
  etcd:
    container_name: image-search-engine-milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    restart: always
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "50m"

  minio:
    container_name: image-search-engine-milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    restart: always
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "50m"

  standalone:
    container_name: image-search-engine-milvus-standalone
    image: milvusdb/milvus:v2.3.2
    command: ["milvus", "run", "standalone"]
    restart: always
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "50m"

  zilliz_attu:
    container_name: zilliz_attu
    image: zilliz/attu:v2.3.2
    restart: always
    environment:
      HOST_URL: http://0.0.0.0:8000
      MILVUS_URL: standalone:19530
    ports:
      - "8000:3000"

  public_minio:
    container_name: public_minio
    restart: always
    image: minio/minio:RELEASE.2023-09-04T19-57-37Z
    ports:
      - "9000:9000" # client port
      - "9002:9002" # console port
    command: server /data --console-address ":9002" #指定容器中的目录 /data
    volumes:
    - ./volumes/public_minio/:/data
    environment:
      MINIO_ACCESS_KEY: ponponon #管理后台用户名
      MINIO_SECRET_KEY: ponponon #管理后台密码，最小8个字符

  mysql8:
    container_name: mysql8
    image: mysql:8.0.34
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=Ep7zMmBfXm4y3wx
    volumes:
      - ./volumes/mysql/:/var/lib/mysql
      - ./my-custom.cnf:/etc/mysql/conf.d/my-custom.cnf
